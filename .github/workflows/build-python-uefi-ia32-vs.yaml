# GitHub actions workflow to build python uefi in ia32 using VS2019
#
# Copyright (c) 2023-2025, Intel Corporation. All rights reserved.
# SPDX-License-Identifier: BSD-2-Clause-Patent
#

name: Build Python Interpreter for UEFI in IA32 using VS2019

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: windows-2019
    env:
      NASM_PREFIX: "C:\\Program Files\\NASM\\"
    defaults:
      run:
        shell: cmd

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install NASM
      run: choco install nasm

    - name: VSWhere
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe"
    - name: Setup environment for Visual Studio 2019 Build Tools
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Auxiliary\Build\vcvarsall.bat" x86
        set
    - name: Clone EDK2
      run: |
        git clone https://github.com/tianocore/edk2.git"
        cd edk2
        git submodule update --init
    - name: Build EDK2 Base Tools
      run: |
        cd edk2
        dir
        edksetup.bat ForceRebuild
    - name: Run srcprep.py
      run: |
        echo switching to AppPkg\Applications\Python\Python-3.6.8\
        cd AppPkg\Applications\Python\Python-3.6.8\
        dir
        echo run srcprep.py file
        python srcprep.py
    - name: Build Python UEFI
      run: |
        set PACKAGES_PATH=%CD%\edk2;%CD%;
        set EDK2_LIBC_PATH=%CD%
        cd edk2
        call edksetup.bat
        build -t VS2019 -a IA32 -b RELEASE -p %EDK2_LIBC_PATH%\AppPkg\AppPkg.dsc -D BUILD_PYTHON368
    - name: Create Python UEFI package
      run: |
        set WORKSPACE=%CD%\edk2
        set EDK2_LIBC_PATH=%CD%
        dir
        call AppPkg\Applications\Python\Python-3.6.8\create_python_pkg.bat VS2019 RELEASE IA32 myUEFIPy
    - name: List build artifacts
      run: |
        dir /S edk2\myUEFIPy
    - name: Upload build output as artifact
      uses: actions/upload-artifact@v4
      with:
        name: myUEFIPy-build-VS2019-IA32-output
        path: edk2\myUEFIPy\**\*
